How to prepare an IDES release

by Lenko Grigorov, Sep 24, 2010


1) uncomment the lines after "// set up global exception handler" in main.Main

2) make sure IDES runs as expected (testing)

3) update branding
	- version, release, website, developers in "strings.properties"
	- version, dates in "license.txt"

4) create API documentation with javadoc (delete old and regenerate),
   for all packages starting with "ides."
	- fix documentation if necessary

5) update help files if necessary (in the "help" subfolder)

6) make sure IDES runs as expected

7) select all packages starting with "ides." and export them to a jar file.
   The naming convention is IDES[version number]api.jar
   (this will be the API distribution)

8) select the whole source tree and export to a jar file.
   The naming convention is IDES[version number].jar
   (this will be the main distribution)
	- newer version of Eclipse create a manifest file automatically but
	if needed, use the existing "MANIFEST.MF" when creating the jar file

9) for the API distribution: use an older distribution as the base for the new one
	- replace the jar file with the updated one
	- replace the javadoc documentation with the updated one
	- replace any other documentation with updated versions
	- update the license file if needed
	- rename the directory cointaining the release to reflect the new version
	  The naming convention is IDES[version number]api
	- add the directory into a new zip file ready for distribution
	  The naming convention is IDES[version number]b[beta version]api.zip
	  (omit the "b" if it's not a beta release)
	- test the zip file

10)for the main distribution: use an older distribution as the base for the new one
	- replace the jar file with the updated one
	- replace the help files with the updated versions
	- update the license file if needed
	- update the libraries in the "lib" folder if needed (the folder should
	  contain all libraries used by IDES and by any plugins packaged with IDES)
	- update the "release.txt" file
	- update the plugins in the "plugins" folder if needed
	- launch IDES directly from the jar file to see if it runs as expected
	- delete the "cache" folder and any other folders created at runtime
	- edit the "settings.ini" file to remove references to directories
	  (namely, the "lastUsedPath", "latexPath" and "gsPath" settings should be
	  empty)
	- rename the directory containing the relase to reflect the new version
	  The naming convention is IDES[version number]
	- add the directory into a new zip file ready for distribution
	  The naming convention is IDES[version number]b[beta version].zip	
	  (omit the "b" if it's not a beta release)
	- test the zip file
	- decompress the zip file into a new location and launch IDES from there
	  to see if it runs as expected
